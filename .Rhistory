options(stringsAsFactors = F)
library(reshape2)
library(ggplot2)
library(plyr)
library(stringr)
library(MASS)
source("../data/xtable.r")
source("../data/xtable.r")
source("../data/xtable.r")
getwd()
source("../data/xtable.r")
getwd()
setwd("C:/Users/Misha/Dropbox/Projects/R/tidy-data/case-study")
source("../data/xtable.r")
if (!file.exists("deaths.rds")) {
src <- "https://github.com/hadley/mexico-mortality/raw/master/deaths/deaths08.csv.bz2"
unlink("deaths08.csv.bz2")
deaths$hod[deaths$hod == 24] <- 0
deaths$hod[deaths$hod == 99] <- NA
file.download(src, "deaths.csv.bz2", quiet = TRUE)
deaths <- read.csv("deaths08.csv.bz2")
deaths$hod[deaths$hod == 0] <- NA
deaths$hod <- as.integer(deaths$hod)
deaths <- deaths[c("yod", "mod", "dod", "hod", "cod")]
saveRDS(deaths, "deaths.rds")
deaths <- arrange(deaths, yod, mod, dod, hod, cod)
}
deaths <- readRDS("deaths.rds")
ok <- subset(deaths, yod == 2008 & mod != 0 & dod != 0)
xtable(ok[c(1, 1:14 * 2000), c("yod", "mod", "dod", "hod", "cod")],
"raw.tex")
codes <- read.csv("icd-main.csv")
codes$disease <- sapply(codes$disease, function(x)
str_c(strwrap(x, width = 30), collapse = "\n"))
names(codes)[1] <- "cod"
codes <- codes[!duplicated(codes$cod), ]
hod_all <- subset(count(deaths, "hod"), !is.na(hod))
qplot(hod, freq, data = hod_all, geom = "line") +
scale_y_continuous("Number of deaths", labels = function(x) format(x, big.mark = ",")) +
xlab("Hour of day")
ggsave("overall.pdf", width = 10, height = 6)
# Count deaths per hour, per disease
hod2 <- count(deaths, c("cod", "hod"))
hod2 <- subset(hod2, !is.na(hod))
hod2 <- join(hod2, codes)
hod2 <- ddply(hod2, "cod", transform, prop = freq / sum(freq))
# Compare to overall abundance
overall <- ddply(hod2, "hod", summarise, freq_all = sum(freq))
overall <- mutate(overall, prop_all = freq_all / sum(freq_all))
hod2 <- join(overall, hod2, by = "hod")
# Pick better subset of rows to show
cods <- join(arrange(count(deaths, "cod"), desc(freq)), codes)
mutate(tail(subset(cods, freq > 100), 30), disease = str_sub(disease, 1, 30))
hod3 <- subset(hod2, cod %in% c("I21", "N18", "E84", "B16") & hod >= 8 & hod <= 12)[1:15, c("hod", "cod", "disease", "freq", "prop", "freq_all", "prop_all")]
xtable(hod3[c("hod", "cod", "freq")], "counts.tex")
xtable(hod3[c("disease")], "counts-disease.tex")
xtable(hod3[5], "counts-prop.tex")
xtable(hod3[6:7], "counts-all.tex")
devi <- ddply(hod2, "cod", summarise, n = sum(freq),
dist = mean((prop - prop_all)^2))
devi <- subset(devi, n > 50)
# Find outliers
xlog10 <- scale_x_log10(
breaks = c(100, 1000, 10000),
labels = c(100, 1000, 10000),
minor_breaks = log10(outer(1:9, 10^(1:5), "*")))
ylog10 <- scale_y_log10(
breaks = 10 ^ -c(3, 4, 5),
labels = c("0.001", "0.0001", "0.00001"),
minor_breaks = log10(outer(1:9, 10^-(3:6), "*")))
qplot(n, dist, data = devi)
ggsave("n-dist-raw.pdf", width = 6, height = 6)
qplot(n, dist, data = devi) +
geom_smooth(method = "rlm", se = F) +
xlog10 +
ylog10
ggsave("n-dist-log.pdf", width = 6, height = 6)
devi$resid <- resid(rlm(log(dist) ~ log(n), data = devi))
coef(rlm(log(dist) ~ log(n), data = devi))
ggplot(devi, aes(n, resid)) +
geom_hline(yintercept = 1.5, colour = "grey50") +
geom_point() +
xlog10
ggsave("n-dist-resid.pdf", width = 6, height = 6)
unusual <- subset(devi, resid > 1.5)
hod_unusual_big <- match_df(hod2, subset(unusual, n > 350))
hod_unusual_sml <- match_df(hod2, subset(unusual, n <= 350))
ggplot(hod_unusual_big, aes(hod, prop)) +
geom_line(aes(y = prop_all), data = overall, colour = "grey50") +
facet_wrap(~ disease, ncol = 3)
geom_line() +
# Visualise unusual causes of death
ggsave("unusual-big.pdf", width = 8, height = 6)
ggplot(hod_unusual_big, aes(hod, prop)) +
geom_line(aes(y = prop_all), data = overall, colour = "grey50") +
geom_line() +
facet_wrap(~ disease, ncol = 3))
ggsave("unusual-big.pdf", width = 8, height = 6)
ggplot(hod_unusual_big, aes(hod, prop)) +
geom_line(aes(y = prop_all), data = overall, colour = "grey50") +
geom_line() +
facet_wrap(~ disease, ncol = 3)
ggsave("unusual-big.pdf", width = 8, height = 6)
last_plot() %+% hod_unusual_sml
ggsave("unusual-sml.pdf", width = 8, height = 4)
getwd()
getwd()
options(stringsAsFactors = F)
library(reshape2)
library(ggplot2)
library(stringr)
library(MASS)
library(plyr)
source("../data/xtable.r")
if (!file.exists("deaths.rds")) {
src <- "https://github.com/hadley/mexico-mortality/raw/master/deaths/deaths08.csv.bz2"
deaths <- read.csv("deaths08.csv.bz2")
unlink("deaths08.csv.bz2")
deaths$hod[deaths$hod == 99] <- NA
deaths$hod[deaths$hod == 24] <- 0
deaths <- arrange(deaths, yod, mod, dod, hod, cod)
deaths$hod <- as.integer(deaths$hod)
deaths$hod[deaths$hod == 0] <- NA
deaths <- deaths[c("yod", "mod", "dod", "hod", "cod")]
file.download(src, "deaths.csv.bz2", quiet = TRUE)
saveRDS(deaths, "deaths.rds")
}
deaths <- readRDS("deaths.rds")
ok <- subset(deaths, yod == 2008 & mod != 0 & dod != 0)
xtable(ok[c(1, 1:14 * 2000), c("yod", "mod", "dod", "hod", "cod")],
"raw.tex")
codes <- read.csv("icd-main.csv")
codes$disease <- sapply(codes$disease, function(x)
names(codes)[1] <- "cod"
codes <- codes[!duplicated(codes$cod), ]
hod_all <- subset(count(deaths, "hod"), !is.na(hod))
qplot(hod, freq, data = hod_all, geom = "line") +
# Display overall hourly deaths
str_c(strwrap(x, width = 30), collapse = "\n"))
scale_y_continuous("Number of deaths", labels = function(x) format(x, big.mark = ",")) +
xlab("Hour of day")
ggsave("overall.pdf", width = 10, height = 6)
# Count deaths per hour, per disease
hod2 <- subset(hod2, !is.na(hod))
hod2 <- join(hod2, codes)
# Compare to overall abundance
overall <- ddply(hod2, "hod", summarise, freq_all = sum(freq))
overall <- mutate(overall, prop_all = freq_all / sum(freq_all))
cods <- join(arrange(count(deaths, "cod"), desc(freq)), codes)
mutate(tail(subset(cods, freq > 100), 30), disease = str_sub(disease, 1, 30))
xtable(hod3[c("hod", "cod", "freq")], "counts.tex")
xtable(hod3[6:7], "counts-all.tex")
devi <- ddply(hod2, "cod", summarise, n = sum(freq),
devi <- subset(devi, n > 50)
xlog10 <- scale_x_log10(
# Find outliers
hod3 <- subset(hod2, cod %in% c("I21", "N18", "E84", "B16") & hod >= 8 & hod <= 12)[1:15, c("hod", "cod", "disease", "freq", "prop", "freq_all", "prop_all")]
hod2 <- count(deaths, c("cod", "hod"))
dist = mean((prop - prop_all)^2))
# Pick better subset of rows to show
xtable(hod3[c("disease")], "counts-disease.tex")
hod2 <- join(overall, hod2, by = "hod")
hod2 <- ddply(hod2, "cod", transform, prop = freq / sum(freq))
xtable(hod3[5], "counts-prop.tex")
breaks = c(100, 1000, 10000),
deaths <- readRDS("deaths.rds")
ok <- subset(deaths, yod == 2008 & mod != 0 & dod != 0)
xtable(ok[c(1, 1:14 * 2000), c("yod", "mod", "dod", "hod", "cod")],
"raw.tex")
library(dplyr)
library(likert)
library(foreign)
library(stats)
library(reshape)
library(xtable)
dataset <- read.csv(file = "../Dataset_2.csv", na.strings = c("", " ", "No answer", "N/A"), header = TRUE)
dataset <- read.csv(file = "../Dataset_2.csv", na.strings = c("", " ", "No answer", "N/A"), header = TRUE)
setwd("C:/Users/Misha/Dropbox/Projects/EM Internship/Quantitative team/R Project/Quantitative-team")
dataset <- read.csv(file = "../Dataset_2.csv", na.strings = c("", " ", "No answer", "N/A"), header = TRUE)
summary(dataset)
dataset_tbl <- tbl_df(dataset)
#dataset with questions about specific universities
university <- select(dataset_tbl,
id,
Course.type,
Course.name,
Graduated,
Start.year,
Finish.year,
Nationality,
Other.nationality,
Second.nationality,
Age,
Gender,
starts_with("X1.4"),
starts_with("X2.1"),
starts_with("X2.2"),
starts_with("X2.3"),
starts_with("X2.5.1"),
starts_with("X4.2"),
starts_with("X5.1"))
#dataset with questions about entire course
overall <- select(dataset,
id,
Course.name,
Graduated,
Finish.year,
Other.nationality,
Course.type,
Nationality,
Start.year,
Second.nationality,
Age,
Gender,
X2.5.2..How.could.your.orientation.and.integration.experience..either.professional.or.personal..have.been.improved.in.any.way.,
X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience..,
X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed..,
X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her..,
X4.1.1..Formalized.feedback.system..All.universities.combined,
X4.1.2..Formalized.feedback.system..Consortium,
X4.3..Describe.course.feedback.channels,
X4.6..Consortium.implementing.recommendaions.given.by.students,
X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations..,
X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work..,
X4.6...Comment,
X4.7..Recommendation.to.improve.feedback.channels,
X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner..,
X4.5..Procedure.for.raising.issues.with.the.entire.consortium,
X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable..,
X6.1..Awareness.over.te.existance.of.EMA,
X6.3..Most.important.issue.to.be.addressed.by.course.representative,
X7.1..Three.most.important.aspects.of.student.experience.that.could.be.improved,
X7.2..Additional.comments.and.suggestions,
X6.2..Awareness.over.the.possibility.of.each.course.to.elect.an.EMA.course.representative,
X8.1..Overall.academic.quality,
X8.2..Overall.balance.of.course.workload,
X8.3..Consistency.of.assessment,
X8.4..Quality.of.internship,
X8.5..Use.of.innovative.technologies,
X8.6..Understanding.the.state.of.the.art.of.your.discipline,
X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs,
X9.1..Achievement.beyond.expectations,
X9.2..Provision.of.certificates..transcripts.etc,
X9.3..Enhancement.of.employment,
X9.4..Information.about.degree.and.certificates,
X9.5..Provision.of.soft.skills,
X9.6..Provision.of.monthly.allowance)
NAs <- overall == c("organization, schedules, communication.") #deleting wrong answers from couple of questions
overall[NAs] <- NA
adequate_levels <- c("Very inadequate", "Inadequate", "Adequate", "Good", "Excellent") #creating ordered levels of Likert-scales
agree_levels <- c("Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree")
feedback_levels <- c("No, none of the universities", "Somewhat (weak or unclear systems)", "I am not sure", "Some do, other do not", "Yes, all universities do")
overall[,"X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience.."] <-
factor(overall[,"X3.1..I.could.approach.my.course.coordinator.with.questions.or.problems.related.to.my.studies.and.mobility.experience.."], levels=agree_levels)
overall[,"X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed.."] <-
factor(overall[,"X3.1..My.course.coordinator.referred.me.to.appropriate.university.administrative.resources.as.needed.."], levels=agree_levels)
overall[,"X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her.."] <-
factor(overall[,"X3.1..I.felt.confident.that.my.course.coordinator.would.follow.up.on.any.unresolved.administrative.issues.or.questions.after.addressing.these.with.him.her.."], levels=agree_levels)
overall[,"X4.1.1..Formalized.feedback.system..All.universities.combined"] <-
factor(overall[,"X4.1.1..Formalized.feedback.system..All.universities.combined"], levels=feedback_levels)
overall[,"X4.1.2..Formalized.feedback.system..Consortium"] <-
factor(overall[,"X4.1.2..Formalized.feedback.system..Consortium"], levels=c("No", "I am not sure", "Somewhat (weak or unclear systems)", "Yes"))
overall[,"X4.3..Describe.course.feedback.channels"] <-
factor(overall[,"X4.3..Describe.course.feedback.channels"], levels=c("Very Weak", "Weak", "I am not sure", "Adequate", "Strong", "Very strong"))
overall[,"X4.6..Consortium.implementing.recommendaions.given.by.students"] <-
factor(overall[,"X4.6..Consortium.implementing.recommendaions.given.by.students"], levels=c("No", "Yes"))
overall[,"X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations.."] <-
factor(overall[,"X5.2..My.lecturers.provided.me.enough.time.for.individual.consultations.."], levels=agree_levels)
overall[,"X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner.."] <-
factor(overall[,"X5.2..My.lecturers.were.available.by.email.and.responded.in.a.timely.manner.."], levels=agree_levels)
overall[,"X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work.."] <-
factor(overall[,"X5.2..My.supervisor.provided.valuable.advice.during.my.thesis.work.."], levels=agree_levels)
overall[,"X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable.."] <-
factor(overall[,"X5.2..Standby.professors.were.available.for.consultation.if.the.lead.supervisor.was.unavailable.."], levels=agree_levels)
overall[,"X8.1..Overall.academic.quality"] <-
factor(overall[,"X8.1..Overall.academic.quality"], levels=adequate_levels)
overall[,"X8.2..Overall.balance.of.course.workload"] <-
factor(overall[,"X8.2..Overall.balance.of.course.workload"], levels=adequate_levels)
overall[,"X8.3..Consistency.of.assessment"] <-
factor(overall[,"X8.3..Consistency.of.assessment"], levels=adequate_levels)
overall[,"X8.4..Quality.of.internship"] <-
factor(overall[,"X8.4..Quality.of.internship"], levels=adequate_levels)
overall[,"X8.5..Use.of.innovative.technologies"] <-
factor(overall[,"X8.2..Overall.balance.of.course.workload"], levels=adequate_levels)
overall[,"X8.5..Use.of.innovative.technologies"] <-
factor(overall[,"X8.2..Overall.balance.of.course.workload"], levels=adequate_levels)
overall[,"X8.6..Understanding.the.state.of.the.art.of.your.discipline"] <-
factor(overall[,"X8.2..Overall.balance.of.course.workload"], levels=adequate_levels)
overall[,"X8.6..Understanding.the.state.of.the.art.of.your.discipline"] <-
factor(overall[,"X8.2..Overall.balance.of.course.workload"], levels=adequate_levels)
overall[,"X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs"] <-
factor(overall[,"X8.7..Balance.of.academic.mobility.path.in.relation.to.academic.needs"], levels=adequate_levels)
overall[,"X9.1..Achievement.beyond.expectations"] <-
factor(overall[,"X9.1..Achievement.beyond.expectations"], levels=adequate_levels)
overall[,"X9.2..Provision.of.certificates..transcripts.etc"] <-
factor(overall[,"X9.2..Provision.of.certificates..transcripts.etc"], levels=adequate_levels)
overall[,"X9.3..Enhancement.of.employment"] <-
factor(overall[,"X9.3..Enhancement.of.employment"], levels=adequate_levels)
overall[,"X9.4..Information.about.degree.and.certificates"] <-
factor(overall[,"X9.4..Information.about.degree.and.certificates"], levels=adequate_levels)
overall[,"X9.5..Provision.of.soft.skills"] <-
factor(overall[,"X9.5..Provision.of.soft.skills"], levels=adequate_levels)
overall[,"X9.6..Provision.of.monthly.allowance"] <-
factor(overall[,"X9.6..Provision.of.monthly.allowance"], levels=adequate_levels)
overall_likert <- select(overall,
id,
Course.name,
starts_with("X3.1"),
starts_with("X4.1"),
starts_with("X4.3"),
starts_with("X5.2"),
starts_with("X8"),
starts_with("X9"))
moverall <- melt(overall_likert, id = c("id", "Course.name"), na.rm = TRUE)
moverall_cast <- cast(moverall, Course.name~variable+value)
moverall_max <- sapply(moverall_cast[,2:116], max)
moverall_cast[,2:116] <- sweep(moverall_cast[,2:116], MARGIN = 2, moverall_max, "/")
View(moverall_cast)
summary(moverall_cast)
moverall <- melt(overall_likert, id = c("id", "Course.name"), na.rm = TRUE)
moverall_cast <- cast(moverall, Course.name~variable+value)
moverall_max <- sapply(moverall_cast[,2:116], max)
View(moverall_cast)
summary(moverall_cast)
